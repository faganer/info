* {
  box-sizing: border-box;
}

body {
  padding: 8px;
  font-size: 14px;
}

img {
  max-width: 100%;
}

.icon-item {
  padding: 8px 5px;
  width: 300px;
}

.icon-item:hover {
  background-color: #f1f1f1;
}

pre {
  &.prettyprint {
    overflow: auto;

    &.prettyprinted {
      padding: 1em;
      border: 1px solid #cccccc;
    }
  }
}

/* ========================================================================
    Component: Flex
    ========================================================================== */

.uk-flex {
  display: flex;
}

.uk-flex-inline {
  display: inline-flex;
}


/*
    * Remove pseudo elements created by micro clearfix as precaution
    */

.uk-flex::before,
.uk-flex::after,
.uk-flex-inline::before,
.uk-flex-inline::after {
  display: none;
}


/* Alignment
    ========================================================================== */


/*
    * Align items along the main axis of the current line of the flex container
    * Row: Horizontal
    */

.uk-flex-left {
  justify-content: flex-start;
}

.uk-flex-center {
  justify-content: center;
}

.uk-flex-right {
  justify-content: flex-end;
}

.uk-flex-between {
  justify-content: space-between;
}

.uk-flex-around {
  justify-content: space-around;
}


/*
    * Align items in the cross axis of the current line of the flex container
    * Row: Vertical
    */

.uk-flex-stretch {
  align-items: stretch;
}

.uk-flex-top {
  align-items: flex-start;
}

.uk-flex-middle {
  align-items: center;
}

.uk-flex-bottom {
  align-items: flex-end;
}


/* Direction
    ========================================================================== */

.uk-flex-row {
  flex-direction: row;
}

.uk-flex-row-reverse {
  flex-direction: row-reverse;
}

.uk-flex-column {
  flex-direction: column;
}

.uk-flex-column-reverse {
  flex-direction: column-reverse;
}


/* Wrap
    ========================================================================== */

.uk-flex-nowrap {
  flex-wrap: nowrap;
}

.uk-flex-wrap {
  flex-wrap: wrap;
}

.uk-flex-wrap-reverse {
  flex-wrap: wrap-reverse;
}


/*
    * Aligns items within the flex container when there is extra space in the cross-axis
    * Only works if there is more than one line of flex items
    */

.uk-flex-wrap-stretch {
  align-content: stretch;
}

.uk-flex-wrap-top {
  align-content: flex-start;
}

.uk-flex-wrap-middle {
  align-content: center;
}

.uk-flex-wrap-bottom {
  align-content: flex-end;
}

.uk-flex-wrap-between {
  align-content: space-between;
}

.uk-flex-wrap-around {
  align-content: space-around;
}


/* Item ordering
    ========================================================================== */


/*
    * Default is 0
    */

.uk-flex-first {
  order: -1;
}

.uk-flex-last {
  order: 99;
}


/* Item dimensions
    ========================================================================== */


/*
    * Initial: 0 1 auto
    * Content dimensions, but shrinks
    */


/*
    * No Flex: 0 0 auto
    * Content dimensions
    */

.uk-flex-none {
  flex: none;
}


/*
    * Relative Flex: 1 1 auto
    * Space is allocated considering content
    */

.uk-flex-auto {
  flex: auto;
}


/*
    * Absolute Flex: 1 1 0%
    * Space is allocated solely based on flex
    */

.uk-flex-1 {
  flex: 1;
}